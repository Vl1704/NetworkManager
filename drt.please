iperf3
Both hosts must have iperf3
iperf -c <address>

Iproute2
$ ip a add 11.11.11.11/24 dev ens18
$ ip route add 192.168.100.62 dev ens38
$ ip route add default via 192.168.100.62
$ ip -br a show
$ ip tunnel add gre1 mode gre local 10.10.10.1 remote 20.20.20.100 ttl 255
$ ip addr add 10.5.5.1/30 dev gre1 #$ ip link set up gre1
$ ip tunnel show
$ ip link set down dev ens18 #or $ ip link set up dev ens18
$ ip link set up dev ens18 
$ ip link add name eth0.110 link eth0 type vlan id 110

NetworkManager
$ apt install network-manager #debian; NetworkManager - AltLinux
$ nmcli con del Wired\ connection\ 2
$ nmcli con add type ethernet con-name isp ifname ens18 ipv4.method manual ipv4.addresses 22.22.22.22/24 ipv4.gateway 22.22.22.1 ipv4.routes "11.11.11.0/24 22.22.22.1" ipv4.dns 8.8.8.8 ipv4.dns-search auto
$ nmcli con up isp
$ nmcli con mod autoconnect yes
$ nmcli con add type ethernet con-name rtrr ifname ens20 ipv4.method auto
$ nmcli con reload
$ nmcli con add type ip-tunnel ip-tunnel.mode gre ip-tunnel.ttl 10 con-name gre1 ifname gre1 remote 5.5.5.100 local 4.4.4.100 ipv4.method manual ipv4.addresses 10.10.10.1/30
$ nmcli con add type ip-tunnel ip-tunnel.mode gre tp-tunnel.ttl 10 con-name gre1 ifname gre1 remote 4.4.4.100 local 5.5.5.100 ipv4.method manual ipv4.addresses 10.10.10.2/30

FRR
$ apt-get install frr
$ vtysh
  router ospf
  network <network> area 0

SSH
$ vim /etc/openssh/sshd_config
  Port 2222
  PermitRootLogin no
  Match Address <address>
    DenyUsers *

#HQ-R to ISP
$ iptables -t nat -A PREROUTING -i ens33 -p tcp --dport 22 -j DNAT --to-destination 192.168.100.10:2222
#Routers
$ iptables -t nat -A POSTROUTING -o <internet interface> -j MASQUERADE

Chrony
$ vim /etc/chrony.conf
  server 127.0.0.1 iburst prefer #server <server address> iburst prefer - on client
  hwtimestamp *
  local stratum 5
  allow 0/0
  #allow ::/0
$ chronyc sources
$ timedatectl set-timezone Europe/Moscow

FreeIPa
#server HQ-SRV
$ apt-get install freeipa-server freeipa-server-dns
$ ipa-server-install
  DNS: yes
  manager password: P@ssw0rd
  DNS forwarders: no
  CHRONY: no
  Continue to configure...: yes
$ kinit admin
$ klist
http://<hostname>.<domain>
  admin p@ssw0rd
#client
$ apt-get install freeipa-client
$ ping hq-srv.hq.work #nameserver HQ-SRV
$ ipa-client-install --mkhomedir --domain hq.work --realm HQ.WORK --enable-dns-updates
  Continue to configure...: yes
  P@ssw0rd

Rsyslog
#server
$ apt-get install rsyslog-classic
$ vim /etc/rsyslog.d/00_common.conf
  #tcp/udp uncomment
  $template RemoteLogs,"/var/log/rsyslog/%HOSTNAME%/%PROGRAMNAME%.log"
  *.* ?RemoteLogs
  & ~
#client
$ apt-get install rsyslog-classic
$ echo "*.* @@192.168.200.1:514" > /etc/rsyslog.d/all_log.conf
$ logger -p 'error' 'Test'

MediaWiki
#HQ-SRV
$ apt-get update && apt-get install docker-{ce,compose}
$ usermod root -aG docker
$ vim wiki.yml
  version: '3'
  services:
    mediawiki:
      image: mediawiki
      restart: always
      ports:
        - 8080:80
      links:
        - database
      container_name: wiki
      volumes:
        - images:/var/www/html/images
 #       - ./LocalSettings.php:/var/www/html/LocalSettings.php  remove the comment later
    database:
      image: mariadb
      container_name: mariadb
      restart: always
      environment:
        MYSQL_DATABASE: mediawiki
        MYSQL_USER: wiki
        MYSQL_PASSWORD: DEP@ssw0rd
        MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
        TZ: Asia/Yekaterinburg
      volumes:
        - db:/var/lib/mysql
  volumes:
    images:
    db:
$ chmod +x wiki.yml
$ systemctl enable --now docker
$ docker volume create storage
  storage
$ docker-compose -f wiki.yml up -d
  ERROR Get:
$ vim /etc/docker/daemon.json
  { #delete or comment with "//" all before
    "registry-mirrors": [ 
      "https://dockerhub1.beget.com",
      "https://mirror.gcr.io" 
    ] 
  }
$ systemctl restart docker
$ lsof -i :8080
  ahttpd
$ vim /etc/ahttpd/ahttpd.conf
  server-port 8090
$ kill -9 8080
$ docker-compose -f wiki.yml up -d
$ iptables -t nat -A PREROUTING -i <IF to HQ-R=ens18> -p tcp --dport 8080 -j DNAT --to-destination 192.168.100.1:8080

#browser
http://hq-srv.hq.work:8080
set up the wiki - Language - Welcome...
Database host: mariadb - DB name: mediawiki - DB username: wiki; DB password: DEP@ssw0rd
Database settings - Continue
Name of wiki: mariadb - Your username: admin - Password: DEP@ssw0rd
I'm bored already, just install the wiki. - Continue*2 - Complete
Download LocalSetting.php - enter your wiki

#terminal
$ cp -r /home/<current user=user1>/Downloads/LocalSettings.php /root/
$ vim /root/wiki.yml
  - ./LocalSettings.php:/var/www/html/LocalSettings.php  #remove now
$ docker-compose -f wiki.yml stop
$ docker-compose -f wiki.yml up -d
  Recreating wiki ... done

#CLI
#terminal
$ vim /etc/hosts
  192.168.100.10 mediawiki.hq.work mediawiki
  192.168.100.10 hq-srv.hq.work  mediawiki
#browser
mediawiki.hq.work:8080

History
~/.bash_history
